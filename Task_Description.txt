0. think before you act

Create new project on GitHub. First initial commit must be an empty maven project. Think carefully on each commit. It must be separated logically.
1. Setup project
	1.	Create Maven based project which has next structure:
	- ui-model - package with Page Objects;
	- test-suite - package with test methods;
	- commons - package for utilities (optional).
	2.	Add as mvn dependency latest version of testNG and selenium web-driver.
	3.	Add as mvn plugins maven-surefire-plugin and maven-surefire-report-plugin.
	4.	Create public repo in GitHub and do initial commit and push.
	5.	Use firefox version 43.0.4.
	6.	Create separate Page Object for each different page (don't forget about OOP principles).

2.	Automate test cases:
	1.	Test google translate.
		Scenario
		1.	Open firefox browser.
		2.	Search via Google search field term "translate google com".
		3.	Open first link.
		4.	Fill in first field "Apple".
		>> The same text is displayed in the area with translation.
		5.	Get inactive languages from top right panel, click on any.
		Expected Result
		Translated text was changed (doesn't equal to the text before).

2.	Test navigation.
	Scenario
		1.	Open firefox browser.
		2.	Search via Google search field term "Apple".
		3.	Get number of results.
		4.	Navigate through second and tenth page.
		5.	Assert number of results.
		Expected Result
		The same number of results are displayed as on the first page was.

3.	TestNG and Maven usage.
	1.	Make sure your new test is in separate class and create two testNG XML files:
	- First one should select and execute your first test by some group name.
	- Second one should execute your second test by the path of your class.
	2.	Execute created testNG XML files via IDE and through console via mvn.
	3.	Make sure reports are generated by maven-surefire-plugin.
